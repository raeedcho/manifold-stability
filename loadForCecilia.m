%% load for Cecilia
% monkey_names = {'Chips','Han'};
% filedates = {...
%     {...
%     '20151113',...
%     '20151117',...
%     '20151120',...
%     '20151201',...
%     '20151204',...
%     '20151211'},...
%     {...
%     '20171024',...
%     '20171030',...
%     '20171031', ...
%     '20171103', ...
%     '20171116', ...
%     '20171120', ...
%     '20171121', ...
%     '20171122', ...
%     '20171127', ...
%     '20171128', ...
%     '20171129', ...
%     '20171201', ...
%     '20171204', ...
%     '20171207',...
%     }};

filenames = {...
    'Chips_20151113_area2_COactpas_001',...
    'Chips_20151117_area2_COactpas_001',...
    'Chips_20151120_area2_COactpas_001',...
    'Chips_20151201_area2_COactpas_001',...
    'Chips_20151204_area2_COactpas_002',...
    'Chips_20151211_area2_COactpas_001',...
    'Han_20171024_area2EMG_COactpas_001',...
    'Han_20171030_area2EMG_COactpas_001',...
    'Han_20171031_area2EMG_COactpas_001', ...
    'Han_20171103_area2EMG_COactpas_001', ...
    'Han_20171116_area2_COactpas_002', ...
    'Han_20171120_area2EMG_COactpas_001', ...
    'Han_20171121_area2EMG_COactpas_001', ...
    'Han_20171122_area2EMG_COactpas_001', ...
    'Han_20171127_area2EMG_COactpas_001', ...
    'Han_20171128_area2EMG_COactpas_001', ...
    'Han_20171129_area2EMG_COactpas_001', ...
    'Han_20171201_area2EMG_COactpas_001', ...
    'Han_20171204_area2EMG_COactpas_001', ...
    'Han_20171207_area2EMG_COactpas_002',...
    };

%% loop over dates
filetic = tic;
fprintf('Starting file conversion...\n')
for filenum = 11:length(filenames)
    %% start
    fileparts = strsplit(filenames{filenum},'_');

    %% Set up
    meta.lab=6;
    meta.ranBy='Raeed';
    meta.monkey=fileparts{1};
    meta.date = fileparts{2};
    if strcmpi(meta.monkey,'Chips')
        meta.task='CO'; % for the loading of cds
    elseif strcmpi(meta.monkey,'Han')
        meta.task = 'COactpas';
    end
    meta.EMGrecorded = false; % whether or not EMG was recorded
    meta.motionTracked = false; % whether or not we have motion tracking
    meta.sorted = false; % whether or not the neurons have already been sorted
    meta.markered = false; % whether or not the colorTracking has already been markered
    meta.array='LeftS1Area2'; % for the loading of cds
    meta.copyfiles=true; % whether or not the script should copy files

    %% Set up meta fields
    meta.localdatafolder=fullfile('C:\Users\rhc307','data'); % folder with data-td and working data folder
    meta.workingfolder=fullfile(meta.localdatafolder,'workspace'); % folder
    meta.cdslibrary=fullfile(meta.localdatafolder,'cds-library');
    meta.FSMResfolder=fullfile('Z:\'); % wherever fsmresfiles are mounted
    meta.remotefolder=fullfile(meta.FSMResfolder,'limblab','User_folders','_old_users','Raeed');
    meta.mapfilefolder=fullfile(meta.remotefolder,'metafiles','mapfiles'); % folder with mapfiles
    
    if strcmp(meta.monkey,'Chips')
        meta.rawfolder=fullfile(meta.FSMResfolder,'data\Chips_12H1\RAW');
        meta.mapfile=fullfile(meta.mapfilefolder,'Chips\left_S1\SN 6251-001455.cmp');
    elseif strcmp(meta.monkey,'Han')
        meta.rawfolder=fullfile(meta.FSMResfolder,'data\Han_13B1\Raw');
        meta.mapfile=fullfile(meta.mapfilefolder,'Han\left_S1\SN 6251-001459.cmp');
    end
    
    %% Copy data into working directory
    copyfile(fullfile(meta.rawfolder,[filenames{filenum} '*']),meta.workingfolder)
    
    %% Set up folder structure
    if ~exist(fullfile(meta.workingfolder,'preCDS'),'dir')
        mkdir(fullfile(meta.workingfolder,'preCDS'))
        movefile(fullfile(meta.workingfolder,[filenames{filenum} '*']),fullfile(meta.workingfolder,'preCDS'))
    end
    if ~exist(fullfile(meta.workingfolder,'preCDS','merging'),'dir')
        mkdir(fullfile(meta.workingfolder,'preCDS','merging'))
        movefile(fullfile(meta.workingfolder,'preCDS',[filenames{filenum} '*.nev']),fullfile(meta.workingfolder,'preCDS','merging'))
    end
    if ~exist(fullfile(meta.workingfolder,'preCDS','Final'),'dir')
        mkdir(fullfile(meta.workingfolder,'preCDS','Final'))
        movefile(fullfile(meta.workingfolder,'preCDS',[filenames{filenum} '*.n*']),fullfile(meta.workingfolder,'preCDS','Final'))
    end

    %% Merge and strip files for spike sorting
    % Run processSpikesForSorting for the first time to combine spike data from
    % all files with a name starting with file_prefix.
    processSpikesForSorting(fullfile(meta.workingfolder,'preCDS','merging'),filenames{filenum});
    
    pause(2)
    %% rename merged file
    movefile(fullfile(meta.workingfolder,'preCDS','merging',[filenames{filenum} '-spikes.nev']),...
        fullfile(meta.workingfolder,'preCDS','merging',[filenames{filenum} '-spikes-s.nev']))
    
    %% Split files and move to Final folder before loading
    processSpikesForSorting(fullfile(meta.workingfolder,'preCDS','merging'),filenames{filenum});

    % move into final folder
    movefile(fullfile(meta.workingfolder,'preCDS','merging',[filenames{filenum} '.mat']),...
        fullfile(meta.workingfolder,'preCDS','Final'));
    movefile(fullfile(meta.workingfolder,'preCDS','merging',[filenames{filenum} '.nev']),...
        fullfile(meta.workingfolder,'preCDS','Final'));

    %% Load data into CDS file
    % Make CDS files
    %% Load data into CDS file
    % Make CDS files
    cds = commonDataStructure();
    cds.file2cds(...
        fullfile(meta.workingfolder,'preCDS','Final',filenames{filenum}),...
        ['ranBy' meta.ranBy],...
        ['array' meta.array],...
        ['monkey' meta.monkey],...
        meta.lab,...
        'ignoreJumps',...
        'unsanitizedTimes',...
        ['task' meta.task],...
        ['mapFile' meta.mapfile]);
    
    %% Save CDS
    cds_name = sprintf('%s_%s_CDS_COactpas_nosort_nomarkers_noemg.mat',meta.monkey,meta.date);
    save(fullfile(meta.cdslibrary,cds_name),'cds','-v7.3')
    
    %% clean up
    % delete things in merging folder
    delete(fullfile(meta.workingfolder,'preCDS','merging','*'));
    delete(fullfile(meta.workingfolder,'preCDS','Final','*'));
    rmdir(fullfile(meta.workingfolder,'preCDS','merging'));
    rmdir(fullfile(meta.workingfolder,'preCDS','Final'));
    delete(fullfile(meta.workingfolder,'preCDS','*'));
    rmdir(fullfile(meta.workingfolder,'preCDS'));
    delete(fullfile(meta.workingfolder,'*'));
    
    clearvars -except filenames filenum filetic
    
    %% display
    fprintf('Time %f - Finished converting file %d of %d: %s\n',toc(filetic),filenum,length(filenames),filenames{filenum})
end
